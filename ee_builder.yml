---
- name: Playbook to create Execution Environment
  hosts: localhost
  gather_facts: false
  vars:
    ee_aap_version: 2.5
    ee_ah_host: galaxy.ansible.com
    ee_registry_dest: "{{ lookup('env', 'CONTROLLER_HOST') }}/ee-builder-pipline"
    ee_registry_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
    ee_registry_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
    ah_token: "{{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"
    ee_list:
      - name: ee_ocp_runner_2
        image: registry.access.redhat.com/ubi9-minimal:latest
        dependencies:
          ansible_core:
            package_pip: ansible-core==2.16
          ansible_runner:
            package_pip: ansible-runner
          system:
            - podman
          python:
            - ansible-navigator
            - pytz
            - python-dateutil>=2.7.0
            - awxkit
          galaxy:
            collections:
              - name: awx.awx
                version: 22.4.0
              - name: infra.ee_utilities
          exclude:
            system:
              - container-selinux
        options:
          tags:
            - ee_development:latest
        build_steps:
          prepend_galaxy:
            - ENV ANSIBLE_GALAXY_SERVER_LIST=automation_hub_certified,upstream_galaxy
            - ENV ANSIBLE_GALAXY_SERVER_UPSTREAM_GALAXY_URL=https://galaxy.ansible.com/
            - ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_CERTIFIED_URL=https://console.redhat.com/api/automation-hub/content/validated/
            - ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_CERTIFIED_AUTH_URL=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
            - ARG ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_CERTIFIED_TOKEN

  roles:
    - infra.ee_utilities.ee_builder
